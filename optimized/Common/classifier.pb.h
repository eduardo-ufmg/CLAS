// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: classifier.proto
// Protobuf C++ Version: 6.31.0-dev

#ifndef classifier_2eproto_2epb_2eh
#define classifier_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_classifier_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_classifier_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_classifier_2eproto;
}  // extern "C"
namespace classifierpb {
class ClusterID;
struct ClusterIDDefaultTypeInternal;
extern ClusterIDDefaultTypeInternal _ClusterID_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ClusterID_class_data_;
class ExpertEntry;
struct ExpertEntryDefaultTypeInternal;
extern ExpertEntryDefaultTypeInternal _ExpertEntry_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ExpertEntry_class_data_;
class Experts;
struct ExpertsDefaultTypeInternal;
extern ExpertsDefaultTypeInternal _Experts_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Experts_class_data_;
class LabeledVertexEntry;
struct LabeledVertexEntryDefaultTypeInternal;
extern LabeledVertexEntryDefaultTypeInternal _LabeledVertexEntry_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LabeledVertexEntry_class_data_;
class LabeledVertices;
struct LabeledVerticesDefaultTypeInternal;
extern LabeledVerticesDefaultTypeInternal _LabeledVertices_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LabeledVertices_class_data_;
class SupportVertexEntry;
struct SupportVertexEntryDefaultTypeInternal;
extern SupportVertexEntryDefaultTypeInternal _SupportVertexEntry_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SupportVertexEntry_class_data_;
class SupportVertices;
struct SupportVerticesDefaultTypeInternal;
extern SupportVerticesDefaultTypeInternal _SupportVertices_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SupportVertices_class_data_;
class TrainingDataset;
struct TrainingDatasetDefaultTypeInternal;
extern TrainingDatasetDefaultTypeInternal _TrainingDataset_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TrainingDataset_class_data_;
class TrainingDatasetEntry;
struct TrainingDatasetEntryDefaultTypeInternal;
extern TrainingDatasetEntryDefaultTypeInternal _TrainingDatasetEntry_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TrainingDatasetEntry_class_data_;
class VertexToLabelEntry;
struct VertexToLabelEntryDefaultTypeInternal;
extern VertexToLabelEntryDefaultTypeInternal _VertexToLabelEntry_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull VertexToLabelEntry_class_data_;
class VerticesToLabel;
struct VerticesToLabelDefaultTypeInternal;
extern VerticesToLabelDefaultTypeInternal _VerticesToLabel_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull VerticesToLabel_class_data_;
}  // namespace classifierpb
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace classifierpb {

// ===================================================================


// -------------------------------------------------------------------

class VertexToLabelEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.VertexToLabelEntry) */ {
 public:
  inline VertexToLabelEntry() : VertexToLabelEntry(nullptr) {}
  ~VertexToLabelEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VertexToLabelEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VertexToLabelEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VertexToLabelEntry(::google::protobuf::internal::ConstantInitialized);

  inline VertexToLabelEntry(const VertexToLabelEntry& from) : VertexToLabelEntry(nullptr, from) {}
  inline VertexToLabelEntry(VertexToLabelEntry&& from) noexcept
      : VertexToLabelEntry(nullptr, std::move(from)) {}
  inline VertexToLabelEntry& operator=(const VertexToLabelEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline VertexToLabelEntry& operator=(VertexToLabelEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VertexToLabelEntry& default_instance() {
    return *reinterpret_cast<const VertexToLabelEntry*>(
        &_VertexToLabelEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(VertexToLabelEntry& a, VertexToLabelEntry& b) { a.Swap(&b); }
  inline void Swap(VertexToLabelEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VertexToLabelEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VertexToLabelEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VertexToLabelEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VertexToLabelEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VertexToLabelEntry& from) { VertexToLabelEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VertexToLabelEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.VertexToLabelEntry"; }

 protected:
  explicit VertexToLabelEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  VertexToLabelEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const VertexToLabelEntry& from);
  VertexToLabelEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, VertexToLabelEntry&& from) noexcept
      : VertexToLabelEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoordinatesFieldNumber = 2,
    kVertexIdFieldNumber = 1,
  };
  // repeated float coordinates = 2;
  int coordinates_size() const;
  private:
  int _internal_coordinates_size() const;

  public:
  void clear_coordinates() ;
  float coordinates(int index) const;
  void set_coordinates(int index, float value);
  void add_coordinates(float value);
  const ::google::protobuf::RepeatedField<float>& coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_coordinates();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_coordinates();

  public:
  // int32 vertex_id = 1;
  void clear_vertex_id() ;
  ::int32_t vertex_id() const;
  void set_vertex_id(::int32_t value);

  private:
  ::int32_t _internal_vertex_id() const;
  void _internal_set_vertex_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:classifierpb.VertexToLabelEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const VertexToLabelEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> coordinates_;
    ::int32_t vertex_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull VertexToLabelEntry_class_data_;
// -------------------------------------------------------------------

class ExpertEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.ExpertEntry) */ {
 public:
  inline ExpertEntry() : ExpertEntry(nullptr) {}
  ~ExpertEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExpertEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExpertEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExpertEntry(::google::protobuf::internal::ConstantInitialized);

  inline ExpertEntry(const ExpertEntry& from) : ExpertEntry(nullptr, from) {}
  inline ExpertEntry(ExpertEntry&& from) noexcept
      : ExpertEntry(nullptr, std::move(from)) {}
  inline ExpertEntry& operator=(const ExpertEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpertEntry& operator=(ExpertEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExpertEntry& default_instance() {
    return *reinterpret_cast<const ExpertEntry*>(
        &_ExpertEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ExpertEntry& a, ExpertEntry& b) { a.Swap(&b); }
  inline void Swap(ExpertEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExpertEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExpertEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExpertEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExpertEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExpertEntry& from) { ExpertEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExpertEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.ExpertEntry"; }

 protected:
  explicit ExpertEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ExpertEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ExpertEntry& from);
  ExpertEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ExpertEntry&& from) noexcept
      : ExpertEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMidpointCoordinatesFieldNumber = 2,
    kDifferencesFieldNumber = 3,
    kExpertIdFieldNumber = 1,
    kBiasFieldNumber = 4,
  };
  // repeated float midpoint_coordinates = 2;
  int midpoint_coordinates_size() const;
  private:
  int _internal_midpoint_coordinates_size() const;

  public:
  void clear_midpoint_coordinates() ;
  float midpoint_coordinates(int index) const;
  void set_midpoint_coordinates(int index, float value);
  void add_midpoint_coordinates(float value);
  const ::google::protobuf::RepeatedField<float>& midpoint_coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_midpoint_coordinates();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_midpoint_coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_midpoint_coordinates();

  public:
  // repeated float differences = 3;
  int differences_size() const;
  private:
  int _internal_differences_size() const;

  public:
  void clear_differences() ;
  float differences(int index) const;
  void set_differences(int index, float value);
  void add_differences(float value);
  const ::google::protobuf::RepeatedField<float>& differences() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_differences();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_differences() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_differences();

  public:
  // int32 expert_id = 1;
  void clear_expert_id() ;
  ::int32_t expert_id() const;
  void set_expert_id(::int32_t value);

  private:
  ::int32_t _internal_expert_id() const;
  void _internal_set_expert_id(::int32_t value);

  public:
  // float bias = 4;
  void clear_bias() ;
  float bias() const;
  void set_bias(float value);

  private:
  float _internal_bias() const;
  void _internal_set_bias(float value);

  public:
  // @@protoc_insertion_point(class_scope:classifierpb.ExpertEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ExpertEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> midpoint_coordinates_;
    ::google::protobuf::RepeatedField<float> differences_;
    ::int32_t expert_id_;
    float bias_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ExpertEntry_class_data_;
// -------------------------------------------------------------------

class ClusterID final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.ClusterID) */ {
 public:
  inline ClusterID() : ClusterID(nullptr) {}
  ~ClusterID() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClusterID* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClusterID));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClusterID(::google::protobuf::internal::ConstantInitialized);

  inline ClusterID(const ClusterID& from) : ClusterID(nullptr, from) {}
  inline ClusterID(ClusterID&& from) noexcept
      : ClusterID(nullptr, std::move(from)) {}
  inline ClusterID& operator=(const ClusterID& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClusterID& operator=(ClusterID&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClusterID& default_instance() {
    return *reinterpret_cast<const ClusterID*>(
        &_ClusterID_default_instance_);
  }
  enum ClusterIdCase {
    kClusterIdInt = 1,
    kClusterIdStr = 2,
    CLUSTER_ID_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ClusterID& a, ClusterID& b) { a.Swap(&b); }
  inline void Swap(ClusterID* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClusterID* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClusterID* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClusterID>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClusterID& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClusterID& from) { ClusterID::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClusterID* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.ClusterID"; }

 protected:
  explicit ClusterID(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ClusterID(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClusterID& from);
  ClusterID(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ClusterID&& from) noexcept
      : ClusterID(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClusterIdIntFieldNumber = 1,
    kClusterIdStrFieldNumber = 2,
  };
  // int32 cluster_id_int = 1;
  bool has_cluster_id_int() const;
  void clear_cluster_id_int() ;
  ::int32_t cluster_id_int() const;
  void set_cluster_id_int(::int32_t value);

  private:
  ::int32_t _internal_cluster_id_int() const;
  void _internal_set_cluster_id_int(::int32_t value);

  public:
  // string cluster_id_str = 2;
  bool has_cluster_id_str() const;
  void clear_cluster_id_str() ;
  const std::string& cluster_id_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_cluster_id_str(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_cluster_id_str();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_cluster_id_str();
  void set_allocated_cluster_id_str(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_cluster_id_str() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_cluster_id_str(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_cluster_id_str();

  public:
  void clear_cluster_id();
  ClusterIdCase cluster_id_case() const;
  // @@protoc_insertion_point(class_scope:classifierpb.ClusterID)
 private:
  class _Internal;
  void set_has_cluster_id_int();
  void set_has_cluster_id_str();
  inline bool has_cluster_id() const;
  inline void clear_has_cluster_id();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   0, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ClusterID& from_msg);
    union ClusterIdUnion {
      constexpr ClusterIdUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t cluster_id_int_;
      ::google::protobuf::internal::ArenaStringPtr cluster_id_str_;
    } cluster_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ClusterID_class_data_;
// -------------------------------------------------------------------

class VerticesToLabel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.VerticesToLabel) */ {
 public:
  inline VerticesToLabel() : VerticesToLabel(nullptr) {}
  ~VerticesToLabel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(VerticesToLabel* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(VerticesToLabel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerticesToLabel(::google::protobuf::internal::ConstantInitialized);

  inline VerticesToLabel(const VerticesToLabel& from) : VerticesToLabel(nullptr, from) {}
  inline VerticesToLabel(VerticesToLabel&& from) noexcept
      : VerticesToLabel(nullptr, std::move(from)) {}
  inline VerticesToLabel& operator=(const VerticesToLabel& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerticesToLabel& operator=(VerticesToLabel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerticesToLabel& default_instance() {
    return *reinterpret_cast<const VerticesToLabel*>(
        &_VerticesToLabel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(VerticesToLabel& a, VerticesToLabel& b) { a.Swap(&b); }
  inline void Swap(VerticesToLabel* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerticesToLabel* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerticesToLabel* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<VerticesToLabel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerticesToLabel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VerticesToLabel& from) { VerticesToLabel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(VerticesToLabel* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.VerticesToLabel"; }

 protected:
  explicit VerticesToLabel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  VerticesToLabel(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const VerticesToLabel& from);
  VerticesToLabel(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, VerticesToLabel&& from) noexcept
      : VerticesToLabel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .classifierpb.VertexToLabelEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::classifierpb::VertexToLabelEntry* PROTOBUF_NONNULL mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>* PROTOBUF_NONNULL mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>* PROTOBUF_NONNULL _internal_mutable_entries();
  public:
  const ::classifierpb::VertexToLabelEntry& entries(int index) const;
  ::classifierpb::VertexToLabelEntry* PROTOBUF_NONNULL add_entries();
  const ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>& entries() const;
  // @@protoc_insertion_point(class_scope:classifierpb.VerticesToLabel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const VerticesToLabel& from_msg);
    ::google::protobuf::RepeatedPtrField< ::classifierpb::VertexToLabelEntry > entries_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull VerticesToLabel_class_data_;
// -------------------------------------------------------------------

class TrainingDatasetEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.TrainingDatasetEntry) */ {
 public:
  inline TrainingDatasetEntry() : TrainingDatasetEntry(nullptr) {}
  ~TrainingDatasetEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrainingDatasetEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrainingDatasetEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrainingDatasetEntry(::google::protobuf::internal::ConstantInitialized);

  inline TrainingDatasetEntry(const TrainingDatasetEntry& from) : TrainingDatasetEntry(nullptr, from) {}
  inline TrainingDatasetEntry(TrainingDatasetEntry&& from) noexcept
      : TrainingDatasetEntry(nullptr, std::move(from)) {}
  inline TrainingDatasetEntry& operator=(const TrainingDatasetEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingDatasetEntry& operator=(TrainingDatasetEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingDatasetEntry& default_instance() {
    return *reinterpret_cast<const TrainingDatasetEntry*>(
        &_TrainingDatasetEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TrainingDatasetEntry& a, TrainingDatasetEntry& b) { a.Swap(&b); }
  inline void Swap(TrainingDatasetEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingDatasetEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingDatasetEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrainingDatasetEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrainingDatasetEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrainingDatasetEntry& from) { TrainingDatasetEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrainingDatasetEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.TrainingDatasetEntry"; }

 protected:
  explicit TrainingDatasetEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrainingDatasetEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrainingDatasetEntry& from);
  TrainingDatasetEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrainingDatasetEntry&& from) noexcept
      : TrainingDatasetEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoordinatesFieldNumber = 1,
    kClusterIdFieldNumber = 2,
  };
  // repeated float coordinates = 1;
  int coordinates_size() const;
  private:
  int _internal_coordinates_size() const;

  public:
  void clear_coordinates() ;
  float coordinates(int index) const;
  void set_coordinates(int index, float value);
  void add_coordinates(float value);
  const ::google::protobuf::RepeatedField<float>& coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_coordinates();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_coordinates();

  public:
  // .classifierpb.ClusterID cluster_id = 2;
  bool has_cluster_id() const;
  void clear_cluster_id() ;
  const ::classifierpb::ClusterID& cluster_id() const;
  [[nodiscard]] ::classifierpb::ClusterID* PROTOBUF_NULLABLE release_cluster_id();
  ::classifierpb::ClusterID* PROTOBUF_NONNULL mutable_cluster_id();
  void set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value);
  ::classifierpb::ClusterID* PROTOBUF_NULLABLE unsafe_arena_release_cluster_id();

  private:
  const ::classifierpb::ClusterID& _internal_cluster_id() const;
  ::classifierpb::ClusterID* PROTOBUF_NONNULL _internal_mutable_cluster_id();

  public:
  // @@protoc_insertion_point(class_scope:classifierpb.TrainingDatasetEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrainingDatasetEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> coordinates_;
    ::classifierpb::ClusterID* PROTOBUF_NULLABLE cluster_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TrainingDatasetEntry_class_data_;
// -------------------------------------------------------------------

class SupportVertexEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.SupportVertexEntry) */ {
 public:
  inline SupportVertexEntry() : SupportVertexEntry(nullptr) {}
  ~SupportVertexEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SupportVertexEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SupportVertexEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SupportVertexEntry(::google::protobuf::internal::ConstantInitialized);

  inline SupportVertexEntry(const SupportVertexEntry& from) : SupportVertexEntry(nullptr, from) {}
  inline SupportVertexEntry(SupportVertexEntry&& from) noexcept
      : SupportVertexEntry(nullptr, std::move(from)) {}
  inline SupportVertexEntry& operator=(const SupportVertexEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline SupportVertexEntry& operator=(SupportVertexEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SupportVertexEntry& default_instance() {
    return *reinterpret_cast<const SupportVertexEntry*>(
        &_SupportVertexEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SupportVertexEntry& a, SupportVertexEntry& b) { a.Swap(&b); }
  inline void Swap(SupportVertexEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SupportVertexEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SupportVertexEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SupportVertexEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SupportVertexEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SupportVertexEntry& from) { SupportVertexEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SupportVertexEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.SupportVertexEntry"; }

 protected:
  explicit SupportVertexEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SupportVertexEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SupportVertexEntry& from);
  SupportVertexEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SupportVertexEntry&& from) noexcept
      : SupportVertexEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCoordinatesFieldNumber = 2,
    kClusterIdFieldNumber = 3,
    kVertexIdFieldNumber = 1,
  };
  // repeated float coordinates = 2;
  int coordinates_size() const;
  private:
  int _internal_coordinates_size() const;

  public:
  void clear_coordinates() ;
  float coordinates(int index) const;
  void set_coordinates(int index, float value);
  void add_coordinates(float value);
  const ::google::protobuf::RepeatedField<float>& coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL mutable_coordinates();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_coordinates() const;
  ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL _internal_mutable_coordinates();

  public:
  // .classifierpb.ClusterID cluster_id = 3;
  bool has_cluster_id() const;
  void clear_cluster_id() ;
  const ::classifierpb::ClusterID& cluster_id() const;
  [[nodiscard]] ::classifierpb::ClusterID* PROTOBUF_NULLABLE release_cluster_id();
  ::classifierpb::ClusterID* PROTOBUF_NONNULL mutable_cluster_id();
  void set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value);
  ::classifierpb::ClusterID* PROTOBUF_NULLABLE unsafe_arena_release_cluster_id();

  private:
  const ::classifierpb::ClusterID& _internal_cluster_id() const;
  ::classifierpb::ClusterID* PROTOBUF_NONNULL _internal_mutable_cluster_id();

  public:
  // int32 vertex_id = 1;
  void clear_vertex_id() ;
  ::int32_t vertex_id() const;
  void set_vertex_id(::int32_t value);

  private:
  ::int32_t _internal_vertex_id() const;
  void _internal_set_vertex_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:classifierpb.SupportVertexEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SupportVertexEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<float> coordinates_;
    ::classifierpb::ClusterID* PROTOBUF_NULLABLE cluster_id_;
    ::int32_t vertex_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SupportVertexEntry_class_data_;
// -------------------------------------------------------------------

class LabeledVertexEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.LabeledVertexEntry) */ {
 public:
  inline LabeledVertexEntry() : LabeledVertexEntry(nullptr) {}
  ~LabeledVertexEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LabeledVertexEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LabeledVertexEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LabeledVertexEntry(::google::protobuf::internal::ConstantInitialized);

  inline LabeledVertexEntry(const LabeledVertexEntry& from) : LabeledVertexEntry(nullptr, from) {}
  inline LabeledVertexEntry(LabeledVertexEntry&& from) noexcept
      : LabeledVertexEntry(nullptr, std::move(from)) {}
  inline LabeledVertexEntry& operator=(const LabeledVertexEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabeledVertexEntry& operator=(LabeledVertexEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LabeledVertexEntry& default_instance() {
    return *reinterpret_cast<const LabeledVertexEntry*>(
        &_LabeledVertexEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(LabeledVertexEntry& a, LabeledVertexEntry& b) { a.Swap(&b); }
  inline void Swap(LabeledVertexEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabeledVertexEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LabeledVertexEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LabeledVertexEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LabeledVertexEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LabeledVertexEntry& from) { LabeledVertexEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LabeledVertexEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.LabeledVertexEntry"; }

 protected:
  explicit LabeledVertexEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LabeledVertexEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LabeledVertexEntry& from);
  LabeledVertexEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LabeledVertexEntry&& from) noexcept
      : LabeledVertexEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClusterIdFieldNumber = 2,
    kVertexIdFieldNumber = 1,
  };
  // .classifierpb.ClusterID cluster_id = 2;
  bool has_cluster_id() const;
  void clear_cluster_id() ;
  const ::classifierpb::ClusterID& cluster_id() const;
  [[nodiscard]] ::classifierpb::ClusterID* PROTOBUF_NULLABLE release_cluster_id();
  ::classifierpb::ClusterID* PROTOBUF_NONNULL mutable_cluster_id();
  void set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value);
  ::classifierpb::ClusterID* PROTOBUF_NULLABLE unsafe_arena_release_cluster_id();

  private:
  const ::classifierpb::ClusterID& _internal_cluster_id() const;
  ::classifierpb::ClusterID* PROTOBUF_NONNULL _internal_mutable_cluster_id();

  public:
  // int32 vertex_id = 1;
  void clear_vertex_id() ;
  ::int32_t vertex_id() const;
  void set_vertex_id(::int32_t value);

  private:
  ::int32_t _internal_vertex_id() const;
  void _internal_set_vertex_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:classifierpb.LabeledVertexEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LabeledVertexEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::classifierpb::ClusterID* PROTOBUF_NULLABLE cluster_id_;
    ::int32_t vertex_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LabeledVertexEntry_class_data_;
// -------------------------------------------------------------------

class Experts final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.Experts) */ {
 public:
  inline Experts() : Experts(nullptr) {}
  ~Experts() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Experts* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Experts));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Experts(::google::protobuf::internal::ConstantInitialized);

  inline Experts(const Experts& from) : Experts(nullptr, from) {}
  inline Experts(Experts&& from) noexcept
      : Experts(nullptr, std::move(from)) {}
  inline Experts& operator=(const Experts& from) {
    CopyFrom(from);
    return *this;
  }
  inline Experts& operator=(Experts&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Experts& default_instance() {
    return *reinterpret_cast<const Experts*>(
        &_Experts_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Experts& a, Experts& b) { a.Swap(&b); }
  inline void Swap(Experts* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Experts* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Experts* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Experts>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Experts& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Experts& from) { Experts::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Experts* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.Experts"; }

 protected:
  explicit Experts(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Experts(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Experts& from);
  Experts(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Experts&& from) noexcept
      : Experts(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .classifierpb.ExpertEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::classifierpb::ExpertEntry* PROTOBUF_NONNULL mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>* PROTOBUF_NONNULL mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>* PROTOBUF_NONNULL _internal_mutable_entries();
  public:
  const ::classifierpb::ExpertEntry& entries(int index) const;
  ::classifierpb::ExpertEntry* PROTOBUF_NONNULL add_entries();
  const ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>& entries() const;
  // @@protoc_insertion_point(class_scope:classifierpb.Experts)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Experts& from_msg);
    ::google::protobuf::RepeatedPtrField< ::classifierpb::ExpertEntry > entries_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Experts_class_data_;
// -------------------------------------------------------------------

class TrainingDataset final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.TrainingDataset) */ {
 public:
  inline TrainingDataset() : TrainingDataset(nullptr) {}
  ~TrainingDataset() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TrainingDataset* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TrainingDataset));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TrainingDataset(::google::protobuf::internal::ConstantInitialized);

  inline TrainingDataset(const TrainingDataset& from) : TrainingDataset(nullptr, from) {}
  inline TrainingDataset(TrainingDataset&& from) noexcept
      : TrainingDataset(nullptr, std::move(from)) {}
  inline TrainingDataset& operator=(const TrainingDataset& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrainingDataset& operator=(TrainingDataset&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TrainingDataset& default_instance() {
    return *reinterpret_cast<const TrainingDataset*>(
        &_TrainingDataset_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(TrainingDataset& a, TrainingDataset& b) { a.Swap(&b); }
  inline void Swap(TrainingDataset* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TrainingDataset* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TrainingDataset* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TrainingDataset>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TrainingDataset& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TrainingDataset& from) { TrainingDataset::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TrainingDataset* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.TrainingDataset"; }

 protected:
  explicit TrainingDataset(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TrainingDataset(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TrainingDataset& from);
  TrainingDataset(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TrainingDataset&& from) noexcept
      : TrainingDataset(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .classifierpb.TrainingDatasetEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::classifierpb::TrainingDatasetEntry* PROTOBUF_NONNULL mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>* PROTOBUF_NONNULL mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>* PROTOBUF_NONNULL _internal_mutable_entries();
  public:
  const ::classifierpb::TrainingDatasetEntry& entries(int index) const;
  ::classifierpb::TrainingDatasetEntry* PROTOBUF_NONNULL add_entries();
  const ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>& entries() const;
  // @@protoc_insertion_point(class_scope:classifierpb.TrainingDataset)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TrainingDataset& from_msg);
    ::google::protobuf::RepeatedPtrField< ::classifierpb::TrainingDatasetEntry > entries_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TrainingDataset_class_data_;
// -------------------------------------------------------------------

class SupportVertices final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.SupportVertices) */ {
 public:
  inline SupportVertices() : SupportVertices(nullptr) {}
  ~SupportVertices() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SupportVertices* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SupportVertices));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SupportVertices(::google::protobuf::internal::ConstantInitialized);

  inline SupportVertices(const SupportVertices& from) : SupportVertices(nullptr, from) {}
  inline SupportVertices(SupportVertices&& from) noexcept
      : SupportVertices(nullptr, std::move(from)) {}
  inline SupportVertices& operator=(const SupportVertices& from) {
    CopyFrom(from);
    return *this;
  }
  inline SupportVertices& operator=(SupportVertices&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SupportVertices& default_instance() {
    return *reinterpret_cast<const SupportVertices*>(
        &_SupportVertices_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SupportVertices& a, SupportVertices& b) { a.Swap(&b); }
  inline void Swap(SupportVertices* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SupportVertices* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SupportVertices* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SupportVertices>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SupportVertices& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SupportVertices& from) { SupportVertices::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SupportVertices* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.SupportVertices"; }

 protected:
  explicit SupportVertices(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SupportVertices(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SupportVertices& from);
  SupportVertices(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SupportVertices&& from) noexcept
      : SupportVertices(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .classifierpb.SupportVertexEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::classifierpb::SupportVertexEntry* PROTOBUF_NONNULL mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>* PROTOBUF_NONNULL mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>* PROTOBUF_NONNULL _internal_mutable_entries();
  public:
  const ::classifierpb::SupportVertexEntry& entries(int index) const;
  ::classifierpb::SupportVertexEntry* PROTOBUF_NONNULL add_entries();
  const ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>& entries() const;
  // @@protoc_insertion_point(class_scope:classifierpb.SupportVertices)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SupportVertices& from_msg);
    ::google::protobuf::RepeatedPtrField< ::classifierpb::SupportVertexEntry > entries_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SupportVertices_class_data_;
// -------------------------------------------------------------------

class LabeledVertices final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:classifierpb.LabeledVertices) */ {
 public:
  inline LabeledVertices() : LabeledVertices(nullptr) {}
  ~LabeledVertices() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LabeledVertices* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LabeledVertices));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LabeledVertices(::google::protobuf::internal::ConstantInitialized);

  inline LabeledVertices(const LabeledVertices& from) : LabeledVertices(nullptr, from) {}
  inline LabeledVertices(LabeledVertices&& from) noexcept
      : LabeledVertices(nullptr, std::move(from)) {}
  inline LabeledVertices& operator=(const LabeledVertices& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabeledVertices& operator=(LabeledVertices&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LabeledVertices& default_instance() {
    return *reinterpret_cast<const LabeledVertices*>(
        &_LabeledVertices_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(LabeledVertices& a, LabeledVertices& b) { a.Swap(&b); }
  inline void Swap(LabeledVertices* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabeledVertices* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LabeledVertices* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LabeledVertices>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LabeledVertices& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LabeledVertices& from) { LabeledVertices::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LabeledVertices* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "classifierpb.LabeledVertices"; }

 protected:
  explicit LabeledVertices(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LabeledVertices(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LabeledVertices& from);
  LabeledVertices(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LabeledVertices&& from) noexcept
      : LabeledVertices(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntriesFieldNumber = 1,
  };
  // repeated .classifierpb.LabeledVertexEntry entries = 1;
  int entries_size() const;
  private:
  int _internal_entries_size() const;

  public:
  void clear_entries() ;
  ::classifierpb::LabeledVertexEntry* PROTOBUF_NONNULL mutable_entries(int index);
  ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>* PROTOBUF_NONNULL mutable_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>& _internal_entries() const;
  ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>* PROTOBUF_NONNULL _internal_mutable_entries();
  public:
  const ::classifierpb::LabeledVertexEntry& entries(int index) const;
  ::classifierpb::LabeledVertexEntry* PROTOBUF_NONNULL add_entries();
  const ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>& entries() const;
  // @@protoc_insertion_point(class_scope:classifierpb.LabeledVertices)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LabeledVertices& from_msg);
    ::google::protobuf::RepeatedPtrField< ::classifierpb::LabeledVertexEntry > entries_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_classifier_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LabeledVertices_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ClusterID

// int32 cluster_id_int = 1;
inline bool ClusterID::has_cluster_id_int() const {
  return cluster_id_case() == kClusterIdInt;
}
inline void ClusterID::set_has_cluster_id_int() {
  _impl_._oneof_case_[0] = kClusterIdInt;
}
inline void ClusterID::clear_cluster_id_int() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cluster_id_case() == kClusterIdInt) {
    _impl_.cluster_id_.cluster_id_int_ = 0;
    clear_has_cluster_id();
  }
}
inline ::int32_t ClusterID::cluster_id_int() const {
  // @@protoc_insertion_point(field_get:classifierpb.ClusterID.cluster_id_int)
  return _internal_cluster_id_int();
}
inline void ClusterID::set_cluster_id_int(::int32_t value) {
  if (cluster_id_case() != kClusterIdInt) {
    clear_cluster_id();
    set_has_cluster_id_int();
  }
  _impl_.cluster_id_.cluster_id_int_ = value;
  // @@protoc_insertion_point(field_set:classifierpb.ClusterID.cluster_id_int)
}
inline ::int32_t ClusterID::_internal_cluster_id_int() const {
  if (cluster_id_case() == kClusterIdInt) {
    return _impl_.cluster_id_.cluster_id_int_;
  }
  return 0;
}

// string cluster_id_str = 2;
inline bool ClusterID::has_cluster_id_str() const {
  return cluster_id_case() == kClusterIdStr;
}
inline void ClusterID::set_has_cluster_id_str() {
  _impl_._oneof_case_[0] = kClusterIdStr;
}
inline void ClusterID::clear_cluster_id_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cluster_id_case() == kClusterIdStr) {
    _impl_.cluster_id_.cluster_id_str_.Destroy();
    clear_has_cluster_id();
  }
}
inline const std::string& ClusterID::cluster_id_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.ClusterID.cluster_id_str)
  return _internal_cluster_id_str();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ClusterID::set_cluster_id_str(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cluster_id_case() != kClusterIdStr) {
    clear_cluster_id();

    set_has_cluster_id_str();
    _impl_.cluster_id_.cluster_id_str_.InitDefault();
  }
  _impl_.cluster_id_.cluster_id_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:classifierpb.ClusterID.cluster_id_str)
}
inline std::string* PROTOBUF_NONNULL ClusterID::mutable_cluster_id_str()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_cluster_id_str();
  // @@protoc_insertion_point(field_mutable:classifierpb.ClusterID.cluster_id_str)
  return _s;
}
inline const std::string& ClusterID::_internal_cluster_id_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (cluster_id_case() != kClusterIdStr) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.cluster_id_.cluster_id_str_.Get();
}
inline void ClusterID::_internal_set_cluster_id_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cluster_id_case() != kClusterIdStr) {
    clear_cluster_id();

    set_has_cluster_id_str();
    _impl_.cluster_id_.cluster_id_str_.InitDefault();
  }
  _impl_.cluster_id_.cluster_id_str_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL ClusterID::_internal_mutable_cluster_id_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cluster_id_case() != kClusterIdStr) {
    clear_cluster_id();

    set_has_cluster_id_str();
    _impl_.cluster_id_.cluster_id_str_.InitDefault();
  }
  return _impl_.cluster_id_.cluster_id_str_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE ClusterID::release_cluster_id_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:classifierpb.ClusterID.cluster_id_str)
  if (cluster_id_case() != kClusterIdStr) {
    return nullptr;
  }
  clear_has_cluster_id();
  return _impl_.cluster_id_.cluster_id_str_.Release();
}
inline void ClusterID::set_allocated_cluster_id_str(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_cluster_id()) {
    clear_cluster_id();
  }
  if (value != nullptr) {
    set_has_cluster_id_str();
    _impl_.cluster_id_.cluster_id_str_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:classifierpb.ClusterID.cluster_id_str)
}

inline bool ClusterID::has_cluster_id() const {
  return cluster_id_case() != CLUSTER_ID_NOT_SET;
}
inline void ClusterID::clear_has_cluster_id() {
  _impl_._oneof_case_[0] = CLUSTER_ID_NOT_SET;
}
inline ClusterID::ClusterIdCase ClusterID::cluster_id_case() const {
  return ClusterID::ClusterIdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TrainingDatasetEntry

// repeated float coordinates = 1;
inline int TrainingDatasetEntry::_internal_coordinates_size() const {
  return _internal_coordinates().size();
}
inline int TrainingDatasetEntry::coordinates_size() const {
  return _internal_coordinates_size();
}
inline void TrainingDatasetEntry::clear_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coordinates_.Clear();
}
inline float TrainingDatasetEntry::coordinates(int index) const {
  // @@protoc_insertion_point(field_get:classifierpb.TrainingDatasetEntry.coordinates)
  return _internal_coordinates().Get(index);
}
inline void TrainingDatasetEntry::set_coordinates(int index, float value) {
  _internal_mutable_coordinates()->Set(index, value);
  // @@protoc_insertion_point(field_set:classifierpb.TrainingDatasetEntry.coordinates)
}
inline void TrainingDatasetEntry::add_coordinates(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_coordinates()->Add(value);
  // @@protoc_insertion_point(field_add:classifierpb.TrainingDatasetEntry.coordinates)
}
inline const ::google::protobuf::RepeatedField<float>& TrainingDatasetEntry::coordinates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.TrainingDatasetEntry.coordinates)
  return _internal_coordinates();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL TrainingDatasetEntry::mutable_coordinates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.TrainingDatasetEntry.coordinates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_coordinates();
}
inline const ::google::protobuf::RepeatedField<float>&
TrainingDatasetEntry::_internal_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.coordinates_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
TrainingDatasetEntry::_internal_mutable_coordinates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.coordinates_;
}

// .classifierpb.ClusterID cluster_id = 2;
inline bool TrainingDatasetEntry::has_cluster_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cluster_id_ != nullptr);
  return value;
}
inline void TrainingDatasetEntry::clear_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cluster_id_ != nullptr) _impl_.cluster_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::classifierpb::ClusterID& TrainingDatasetEntry::_internal_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::classifierpb::ClusterID* p = _impl_.cluster_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::classifierpb::ClusterID&>(::classifierpb::_ClusterID_default_instance_);
}
inline const ::classifierpb::ClusterID& TrainingDatasetEntry::cluster_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.TrainingDatasetEntry.cluster_id)
  return _internal_cluster_id();
}
inline void TrainingDatasetEntry::unsafe_arena_set_allocated_cluster_id(
    ::classifierpb::ClusterID* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cluster_id_);
  }
  _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:classifierpb.TrainingDatasetEntry.cluster_id)
}
inline ::classifierpb::ClusterID* PROTOBUF_NULLABLE TrainingDatasetEntry::release_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::classifierpb::ClusterID* released = _impl_.cluster_id_;
  _impl_.cluster_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::classifierpb::ClusterID* PROTOBUF_NULLABLE TrainingDatasetEntry::unsafe_arena_release_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:classifierpb.TrainingDatasetEntry.cluster_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::classifierpb::ClusterID* temp = _impl_.cluster_id_;
  _impl_.cluster_id_ = nullptr;
  return temp;
}
inline ::classifierpb::ClusterID* PROTOBUF_NONNULL TrainingDatasetEntry::_internal_mutable_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cluster_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::classifierpb::ClusterID>(GetArena());
    _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(p);
  }
  return _impl_.cluster_id_;
}
inline ::classifierpb::ClusterID* PROTOBUF_NONNULL TrainingDatasetEntry::mutable_cluster_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::classifierpb::ClusterID* _msg = _internal_mutable_cluster_id();
  // @@protoc_insertion_point(field_mutable:classifierpb.TrainingDatasetEntry.cluster_id)
  return _msg;
}
inline void TrainingDatasetEntry::set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cluster_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(value);
  // @@protoc_insertion_point(field_set_allocated:classifierpb.TrainingDatasetEntry.cluster_id)
}

// -------------------------------------------------------------------

// TrainingDataset

// repeated .classifierpb.TrainingDatasetEntry entries = 1;
inline int TrainingDataset::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int TrainingDataset::entries_size() const {
  return _internal_entries_size();
}
inline void TrainingDataset::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::classifierpb::TrainingDatasetEntry* PROTOBUF_NONNULL TrainingDataset::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:classifierpb.TrainingDataset.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>* PROTOBUF_NONNULL TrainingDataset::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.TrainingDataset.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::classifierpb::TrainingDatasetEntry& TrainingDataset::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.TrainingDataset.entries)
  return _internal_entries().Get(index);
}
inline ::classifierpb::TrainingDatasetEntry* PROTOBUF_NONNULL TrainingDataset::add_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::classifierpb::TrainingDatasetEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:classifierpb.TrainingDataset.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>& TrainingDataset::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.TrainingDataset.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>&
TrainingDataset::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::TrainingDatasetEntry>* PROTOBUF_NONNULL
TrainingDataset::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// SupportVertexEntry

// int32 vertex_id = 1;
inline void SupportVertexEntry::clear_vertex_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertex_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SupportVertexEntry::vertex_id() const {
  // @@protoc_insertion_point(field_get:classifierpb.SupportVertexEntry.vertex_id)
  return _internal_vertex_id();
}
inline void SupportVertexEntry::set_vertex_id(::int32_t value) {
  _internal_set_vertex_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:classifierpb.SupportVertexEntry.vertex_id)
}
inline ::int32_t SupportVertexEntry::_internal_vertex_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertex_id_;
}
inline void SupportVertexEntry::_internal_set_vertex_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertex_id_ = value;
}

// repeated float coordinates = 2;
inline int SupportVertexEntry::_internal_coordinates_size() const {
  return _internal_coordinates().size();
}
inline int SupportVertexEntry::coordinates_size() const {
  return _internal_coordinates_size();
}
inline void SupportVertexEntry::clear_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coordinates_.Clear();
}
inline float SupportVertexEntry::coordinates(int index) const {
  // @@protoc_insertion_point(field_get:classifierpb.SupportVertexEntry.coordinates)
  return _internal_coordinates().Get(index);
}
inline void SupportVertexEntry::set_coordinates(int index, float value) {
  _internal_mutable_coordinates()->Set(index, value);
  // @@protoc_insertion_point(field_set:classifierpb.SupportVertexEntry.coordinates)
}
inline void SupportVertexEntry::add_coordinates(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_coordinates()->Add(value);
  // @@protoc_insertion_point(field_add:classifierpb.SupportVertexEntry.coordinates)
}
inline const ::google::protobuf::RepeatedField<float>& SupportVertexEntry::coordinates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.SupportVertexEntry.coordinates)
  return _internal_coordinates();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL SupportVertexEntry::mutable_coordinates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.SupportVertexEntry.coordinates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_coordinates();
}
inline const ::google::protobuf::RepeatedField<float>&
SupportVertexEntry::_internal_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.coordinates_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
SupportVertexEntry::_internal_mutable_coordinates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.coordinates_;
}

// .classifierpb.ClusterID cluster_id = 3;
inline bool SupportVertexEntry::has_cluster_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cluster_id_ != nullptr);
  return value;
}
inline void SupportVertexEntry::clear_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cluster_id_ != nullptr) _impl_.cluster_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::classifierpb::ClusterID& SupportVertexEntry::_internal_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::classifierpb::ClusterID* p = _impl_.cluster_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::classifierpb::ClusterID&>(::classifierpb::_ClusterID_default_instance_);
}
inline const ::classifierpb::ClusterID& SupportVertexEntry::cluster_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.SupportVertexEntry.cluster_id)
  return _internal_cluster_id();
}
inline void SupportVertexEntry::unsafe_arena_set_allocated_cluster_id(
    ::classifierpb::ClusterID* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cluster_id_);
  }
  _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:classifierpb.SupportVertexEntry.cluster_id)
}
inline ::classifierpb::ClusterID* PROTOBUF_NULLABLE SupportVertexEntry::release_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::classifierpb::ClusterID* released = _impl_.cluster_id_;
  _impl_.cluster_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::classifierpb::ClusterID* PROTOBUF_NULLABLE SupportVertexEntry::unsafe_arena_release_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:classifierpb.SupportVertexEntry.cluster_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::classifierpb::ClusterID* temp = _impl_.cluster_id_;
  _impl_.cluster_id_ = nullptr;
  return temp;
}
inline ::classifierpb::ClusterID* PROTOBUF_NONNULL SupportVertexEntry::_internal_mutable_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cluster_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::classifierpb::ClusterID>(GetArena());
    _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(p);
  }
  return _impl_.cluster_id_;
}
inline ::classifierpb::ClusterID* PROTOBUF_NONNULL SupportVertexEntry::mutable_cluster_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::classifierpb::ClusterID* _msg = _internal_mutable_cluster_id();
  // @@protoc_insertion_point(field_mutable:classifierpb.SupportVertexEntry.cluster_id)
  return _msg;
}
inline void SupportVertexEntry::set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cluster_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(value);
  // @@protoc_insertion_point(field_set_allocated:classifierpb.SupportVertexEntry.cluster_id)
}

// -------------------------------------------------------------------

// SupportVertices

// repeated .classifierpb.SupportVertexEntry entries = 1;
inline int SupportVertices::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int SupportVertices::entries_size() const {
  return _internal_entries_size();
}
inline void SupportVertices::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::classifierpb::SupportVertexEntry* PROTOBUF_NONNULL SupportVertices::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:classifierpb.SupportVertices.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>* PROTOBUF_NONNULL SupportVertices::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.SupportVertices.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::classifierpb::SupportVertexEntry& SupportVertices::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.SupportVertices.entries)
  return _internal_entries().Get(index);
}
inline ::classifierpb::SupportVertexEntry* PROTOBUF_NONNULL SupportVertices::add_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::classifierpb::SupportVertexEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:classifierpb.SupportVertices.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>& SupportVertices::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.SupportVertices.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>&
SupportVertices::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::SupportVertexEntry>* PROTOBUF_NONNULL
SupportVertices::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// ExpertEntry

// int32 expert_id = 1;
inline void ExpertEntry::clear_expert_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expert_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t ExpertEntry::expert_id() const {
  // @@protoc_insertion_point(field_get:classifierpb.ExpertEntry.expert_id)
  return _internal_expert_id();
}
inline void ExpertEntry::set_expert_id(::int32_t value) {
  _internal_set_expert_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:classifierpb.ExpertEntry.expert_id)
}
inline ::int32_t ExpertEntry::_internal_expert_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expert_id_;
}
inline void ExpertEntry::_internal_set_expert_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expert_id_ = value;
}

// repeated float midpoint_coordinates = 2;
inline int ExpertEntry::_internal_midpoint_coordinates_size() const {
  return _internal_midpoint_coordinates().size();
}
inline int ExpertEntry::midpoint_coordinates_size() const {
  return _internal_midpoint_coordinates_size();
}
inline void ExpertEntry::clear_midpoint_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.midpoint_coordinates_.Clear();
}
inline float ExpertEntry::midpoint_coordinates(int index) const {
  // @@protoc_insertion_point(field_get:classifierpb.ExpertEntry.midpoint_coordinates)
  return _internal_midpoint_coordinates().Get(index);
}
inline void ExpertEntry::set_midpoint_coordinates(int index, float value) {
  _internal_mutable_midpoint_coordinates()->Set(index, value);
  // @@protoc_insertion_point(field_set:classifierpb.ExpertEntry.midpoint_coordinates)
}
inline void ExpertEntry::add_midpoint_coordinates(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_midpoint_coordinates()->Add(value);
  // @@protoc_insertion_point(field_add:classifierpb.ExpertEntry.midpoint_coordinates)
}
inline const ::google::protobuf::RepeatedField<float>& ExpertEntry::midpoint_coordinates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.ExpertEntry.midpoint_coordinates)
  return _internal_midpoint_coordinates();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL ExpertEntry::mutable_midpoint_coordinates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.ExpertEntry.midpoint_coordinates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_midpoint_coordinates();
}
inline const ::google::protobuf::RepeatedField<float>&
ExpertEntry::_internal_midpoint_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.midpoint_coordinates_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
ExpertEntry::_internal_mutable_midpoint_coordinates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.midpoint_coordinates_;
}

// repeated float differences = 3;
inline int ExpertEntry::_internal_differences_size() const {
  return _internal_differences().size();
}
inline int ExpertEntry::differences_size() const {
  return _internal_differences_size();
}
inline void ExpertEntry::clear_differences() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.differences_.Clear();
}
inline float ExpertEntry::differences(int index) const {
  // @@protoc_insertion_point(field_get:classifierpb.ExpertEntry.differences)
  return _internal_differences().Get(index);
}
inline void ExpertEntry::set_differences(int index, float value) {
  _internal_mutable_differences()->Set(index, value);
  // @@protoc_insertion_point(field_set:classifierpb.ExpertEntry.differences)
}
inline void ExpertEntry::add_differences(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_differences()->Add(value);
  // @@protoc_insertion_point(field_add:classifierpb.ExpertEntry.differences)
}
inline const ::google::protobuf::RepeatedField<float>& ExpertEntry::differences() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.ExpertEntry.differences)
  return _internal_differences();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL ExpertEntry::mutable_differences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.ExpertEntry.differences)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_differences();
}
inline const ::google::protobuf::RepeatedField<float>&
ExpertEntry::_internal_differences() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.differences_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
ExpertEntry::_internal_mutable_differences() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.differences_;
}

// float bias = 4;
inline void ExpertEntry::clear_bias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bias_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float ExpertEntry::bias() const {
  // @@protoc_insertion_point(field_get:classifierpb.ExpertEntry.bias)
  return _internal_bias();
}
inline void ExpertEntry::set_bias(float value) {
  _internal_set_bias(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:classifierpb.ExpertEntry.bias)
}
inline float ExpertEntry::_internal_bias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bias_;
}
inline void ExpertEntry::_internal_set_bias(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bias_ = value;
}

// -------------------------------------------------------------------

// Experts

// repeated .classifierpb.ExpertEntry entries = 1;
inline int Experts::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int Experts::entries_size() const {
  return _internal_entries_size();
}
inline void Experts::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::classifierpb::ExpertEntry* PROTOBUF_NONNULL Experts::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:classifierpb.Experts.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>* PROTOBUF_NONNULL Experts::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.Experts.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::classifierpb::ExpertEntry& Experts::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.Experts.entries)
  return _internal_entries().Get(index);
}
inline ::classifierpb::ExpertEntry* PROTOBUF_NONNULL Experts::add_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::classifierpb::ExpertEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:classifierpb.Experts.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>& Experts::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.Experts.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>&
Experts::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::ExpertEntry>* PROTOBUF_NONNULL
Experts::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// VertexToLabelEntry

// int32 vertex_id = 1;
inline void VertexToLabelEntry::clear_vertex_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertex_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t VertexToLabelEntry::vertex_id() const {
  // @@protoc_insertion_point(field_get:classifierpb.VertexToLabelEntry.vertex_id)
  return _internal_vertex_id();
}
inline void VertexToLabelEntry::set_vertex_id(::int32_t value) {
  _internal_set_vertex_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:classifierpb.VertexToLabelEntry.vertex_id)
}
inline ::int32_t VertexToLabelEntry::_internal_vertex_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertex_id_;
}
inline void VertexToLabelEntry::_internal_set_vertex_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertex_id_ = value;
}

// repeated float coordinates = 2;
inline int VertexToLabelEntry::_internal_coordinates_size() const {
  return _internal_coordinates().size();
}
inline int VertexToLabelEntry::coordinates_size() const {
  return _internal_coordinates_size();
}
inline void VertexToLabelEntry::clear_coordinates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coordinates_.Clear();
}
inline float VertexToLabelEntry::coordinates(int index) const {
  // @@protoc_insertion_point(field_get:classifierpb.VertexToLabelEntry.coordinates)
  return _internal_coordinates().Get(index);
}
inline void VertexToLabelEntry::set_coordinates(int index, float value) {
  _internal_mutable_coordinates()->Set(index, value);
  // @@protoc_insertion_point(field_set:classifierpb.VertexToLabelEntry.coordinates)
}
inline void VertexToLabelEntry::add_coordinates(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_coordinates()->Add(value);
  // @@protoc_insertion_point(field_add:classifierpb.VertexToLabelEntry.coordinates)
}
inline const ::google::protobuf::RepeatedField<float>& VertexToLabelEntry::coordinates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.VertexToLabelEntry.coordinates)
  return _internal_coordinates();
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL VertexToLabelEntry::mutable_coordinates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.VertexToLabelEntry.coordinates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_coordinates();
}
inline const ::google::protobuf::RepeatedField<float>&
VertexToLabelEntry::_internal_coordinates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.coordinates_;
}
inline ::google::protobuf::RepeatedField<float>* PROTOBUF_NONNULL
VertexToLabelEntry::_internal_mutable_coordinates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.coordinates_;
}

// -------------------------------------------------------------------

// VerticesToLabel

// repeated .classifierpb.VertexToLabelEntry entries = 1;
inline int VerticesToLabel::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int VerticesToLabel::entries_size() const {
  return _internal_entries_size();
}
inline void VerticesToLabel::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::classifierpb::VertexToLabelEntry* PROTOBUF_NONNULL VerticesToLabel::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:classifierpb.VerticesToLabel.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>* PROTOBUF_NONNULL VerticesToLabel::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.VerticesToLabel.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::classifierpb::VertexToLabelEntry& VerticesToLabel::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.VerticesToLabel.entries)
  return _internal_entries().Get(index);
}
inline ::classifierpb::VertexToLabelEntry* PROTOBUF_NONNULL VerticesToLabel::add_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::classifierpb::VertexToLabelEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:classifierpb.VerticesToLabel.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>& VerticesToLabel::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.VerticesToLabel.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>&
VerticesToLabel::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::VertexToLabelEntry>* PROTOBUF_NONNULL
VerticesToLabel::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

// -------------------------------------------------------------------

// LabeledVertexEntry

// int32 vertex_id = 1;
inline void LabeledVertexEntry::clear_vertex_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertex_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t LabeledVertexEntry::vertex_id() const {
  // @@protoc_insertion_point(field_get:classifierpb.LabeledVertexEntry.vertex_id)
  return _internal_vertex_id();
}
inline void LabeledVertexEntry::set_vertex_id(::int32_t value) {
  _internal_set_vertex_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:classifierpb.LabeledVertexEntry.vertex_id)
}
inline ::int32_t LabeledVertexEntry::_internal_vertex_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vertex_id_;
}
inline void LabeledVertexEntry::_internal_set_vertex_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vertex_id_ = value;
}

// .classifierpb.ClusterID cluster_id = 2;
inline bool LabeledVertexEntry::has_cluster_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cluster_id_ != nullptr);
  return value;
}
inline void LabeledVertexEntry::clear_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cluster_id_ != nullptr) _impl_.cluster_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::classifierpb::ClusterID& LabeledVertexEntry::_internal_cluster_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::classifierpb::ClusterID* p = _impl_.cluster_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::classifierpb::ClusterID&>(::classifierpb::_ClusterID_default_instance_);
}
inline const ::classifierpb::ClusterID& LabeledVertexEntry::cluster_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.LabeledVertexEntry.cluster_id)
  return _internal_cluster_id();
}
inline void LabeledVertexEntry::unsafe_arena_set_allocated_cluster_id(
    ::classifierpb::ClusterID* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cluster_id_);
  }
  _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:classifierpb.LabeledVertexEntry.cluster_id)
}
inline ::classifierpb::ClusterID* PROTOBUF_NULLABLE LabeledVertexEntry::release_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::classifierpb::ClusterID* released = _impl_.cluster_id_;
  _impl_.cluster_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::classifierpb::ClusterID* PROTOBUF_NULLABLE LabeledVertexEntry::unsafe_arena_release_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:classifierpb.LabeledVertexEntry.cluster_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::classifierpb::ClusterID* temp = _impl_.cluster_id_;
  _impl_.cluster_id_ = nullptr;
  return temp;
}
inline ::classifierpb::ClusterID* PROTOBUF_NONNULL LabeledVertexEntry::_internal_mutable_cluster_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.cluster_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::classifierpb::ClusterID>(GetArena());
    _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(p);
  }
  return _impl_.cluster_id_;
}
inline ::classifierpb::ClusterID* PROTOBUF_NONNULL LabeledVertexEntry::mutable_cluster_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::classifierpb::ClusterID* _msg = _internal_mutable_cluster_id();
  // @@protoc_insertion_point(field_mutable:classifierpb.LabeledVertexEntry.cluster_id)
  return _msg;
}
inline void LabeledVertexEntry::set_allocated_cluster_id(::classifierpb::ClusterID* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cluster_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.cluster_id_ = reinterpret_cast<::classifierpb::ClusterID*>(value);
  // @@protoc_insertion_point(field_set_allocated:classifierpb.LabeledVertexEntry.cluster_id)
}

// -------------------------------------------------------------------

// LabeledVertices

// repeated .classifierpb.LabeledVertexEntry entries = 1;
inline int LabeledVertices::_internal_entries_size() const {
  return _internal_entries().size();
}
inline int LabeledVertices::entries_size() const {
  return _internal_entries_size();
}
inline void LabeledVertices::clear_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entries_.Clear();
}
inline ::classifierpb::LabeledVertexEntry* PROTOBUF_NONNULL LabeledVertices::mutable_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:classifierpb.LabeledVertices.entries)
  return _internal_mutable_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>* PROTOBUF_NONNULL LabeledVertices::mutable_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:classifierpb.LabeledVertices.entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entries();
}
inline const ::classifierpb::LabeledVertexEntry& LabeledVertices::entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:classifierpb.LabeledVertices.entries)
  return _internal_entries().Get(index);
}
inline ::classifierpb::LabeledVertexEntry* PROTOBUF_NONNULL LabeledVertices::add_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::classifierpb::LabeledVertexEntry* _add = _internal_mutable_entries()->Add();
  // @@protoc_insertion_point(field_add:classifierpb.LabeledVertices.entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>& LabeledVertices::entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:classifierpb.LabeledVertices.entries)
  return _internal_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>&
LabeledVertices::_internal_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entries_;
}
inline ::google::protobuf::RepeatedPtrField<::classifierpb::LabeledVertexEntry>* PROTOBUF_NONNULL
LabeledVertices::_internal_mutable_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entries_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace classifierpb


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // classifier_2eproto_2epb_2eh
